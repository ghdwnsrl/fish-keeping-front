name: Frontend Build and Push

on:
  push:
    branches:
      - main
      
jobs:
  build-and-push:
    runs-on: ubuntu-latest  
    # 가장 최신의 Ubuntu 러너를 사용합니다.

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2  
      # 현재 리포지토리를 체크아웃합니다.

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  
      # Docker Buildx를 설정합니다.
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  
        # GitHub Secret에서 Docker Hub 사용자 이름을 가져옵니다.
        password: ${{ secrets.DOCKER_TOKEN }}     
        # GitHub Secret에서 Docker Hub 액세스 토큰을 가져옵니다
    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: ./
        # Dockerfile이 있는 위치입니다.
        file: ./Dockerfile  
        # Dockerfile의 경로입니다.
        push: true  # 이미지를 레지스트리에 푸시합니다.
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/fishkeeping-front:${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/fishkeeping-front:latest
        build-args: |
          VITE_SECURE_LOCAL_STORAGE_HASH_KEY=${{ secrets.VITE_SECURE_LOCAL_STORAGE_HASH_KEY }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          export PATH=$PATH:/usr/local/bin
          security -v unlock-keychain -p ${{ secrets.KEYCHAIN_PASSWORD }}  ~/Library/Keychains/login.keychain-db
          docker compose up -d --pull always
